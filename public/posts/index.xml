<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - OK Computer</title>
        <link>/posts/</link>
        <description>所有文章 | OK Computer</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>wumanho@tutanota.com (wumanho)</managingEditor>
            <webMaster>wumanho@tutanota.com (wumanho)</webMaster><lastBuildDate>Tue, 01 Dec 2020 09:50:23 &#43;0800</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml" /><item>
    <title>利用 HTTP/2 为网站提速</title>
    <link>/posts/introductiontohttp2/</link>
    <pubDate>Tue, 01 Dec 2020 09:50:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/introductiontohttp2/</guid>
    <description><![CDATA[为什么需要 HTTP/2 在介绍 HTTP/2 之前，我们首先要讨论一下当前被广泛使用的 HTTP/1.x ，如果你是一名 WEB 开发者，那么你一定不会对这个名词感到陌生。 HTTP 协议建立在 TCP 协议的]]></description>
</item><item>
    <title>假假條 x 梅卡德尔</title>
    <link>/posts/show1129/</link>
    <pubDate>Sun, 29 Nov 2020 23:04:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/show1129/</guid>
    <description><![CDATA[昨晚在 B10 看了假假條和梅卡的演出，假假條几位大哥飞机故障导致延迟开场把我们晾在门外面一个多小时，冷的人都快没了，积攒了不少怒气在后面全部发泄出]]></description>
</item><item>
    <title>Radiohead - The Tourist 歌词翻译</title>
    <link>/posts/thetourist/</link>
    <pubDate>Mon, 23 Nov 2020 22:52:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/thetourist/</guid>
    <description><![CDATA[⚠️ 本文仅用于自己学习，不作任何商业用途，如触犯任何侵权行为，请联系 wumanho@tutanota.com 删除文章。 It barks at no one else but me 它只会对着我乱吠 Like it&rsquo;s seen a ghost 就好像看到鬼一样 I]]></description>
</item><item>
    <title>用 Node.js 写一个简易静态服务器</title>
    <link>/posts/nodesimpleserver/</link>
    <pubDate>Sun, 22 Nov 2020 00:29:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/nodesimpleserver/</guid>
    <description><![CDATA[Node.js 是一个开源与跨平台的 JavaScript 运行时环境，通过 Node.js 开发者可以在浏览器之外运行 JavaScript 代码，使得 JS 也拥有了开发后端项目的能力。同时 Node.js 运行 V8 JavaScript 引擎（Googl]]></description>
</item><item>
    <title>利用 jQuery 发送 AJAX 请求</title>
    <link>/posts/ajaxjq/</link>
    <pubDate>Wed, 18 Nov 2020 11:36:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/ajaxjq/</guid>
    <description><![CDATA[AJAX 全称 ASynchronous JavaScript And XML，异步 JS 和 XML，本质上是利用浏览器提供的全局构造函数 XMLHttpRequest 创建的对象来发送和接受请求的一种技术。 由于 AJAX 是异步的（这里不对同步]]></description>
</item><item>
    <title>DOM 事件与事件委托</title>
    <link>/posts/domevent/</link>
    <pubDate>Sun, 08 Nov 2020 16:08:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/domevent/</guid>
    <description><![CDATA[什么是 DOM 事件 ❓ DOM 事件是指用户在与浏览器交互时，或者浏览器自身运行时执行的某一个动作。 发送 DOM 事件是为了将发生的相关事情通知代码。每个事件都是继]]></description>
</item><item>
    <title>JavaScript 继承</title>
    <link>/posts/jsinheritance/</link>
    <pubDate>Wed, 26 Aug 2020 15:03:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/jsinheritance/</guid>
    <description><![CDATA[「继承」在面向对象编程中属于核心概念，不过 JavaScript 并不是严格意义上的面向对象语言，JS 不像传统的面向对象编程语言例如 Java 那样，倾向于通过先定义类，定]]></description>
</item><item>
    <title>新概念二册-Lesson 6 笔记</title>
    <link>/posts/0206/</link>
    <pubDate>Mon, 27 Jul 2020 18:59:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/0206/</guid>
    <description><![CDATA[Lesson 6 Percy Buttons 生词短语用法 🚀 call on sb. / call at sp. 拜访人用call on，光顾某个地方用call at 可以用visit sb./sp. 代替 ask for &hellip; 寻求 -&gt; He asked me for a meal In return for &hellip; 作为]]></description>
</item><item>
    <title>新概念二册-Lesson 1~5 笔记</title>
    <link>/posts/0201to0205/</link>
    <pubDate>Sun, 26 Jul 2020 12:40:38 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/0201to0205/</guid>
    <description><![CDATA[Lesson 1 A private conversation 生词短语用法 🙆‍♂️ pay attension to sb. / sth. May I have your attension，please？ &ndash;&gt; 请注意咯 attract / catch one&rsquo;s attension &ndash;&gt; 吸引某人注意力 none of &ndash;&gt; 都没有 形容词一]]></description>
</item><item>
    <title>jQuery 使用和设计简介</title>
    <link>/posts/jq01/</link>
    <pubDate>Sat, 25 Jul 2020 20:20:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>/posts/jq01/</guid>
    <description><![CDATA[jQuery 介绍 📗 jQuery 是一个非常经典的 DOM 库，从 06 年 jQuery 发布之后，至今已经被被广泛使用长达十几年。 至于为什么 jQuery 可以被称之为经典，我想是因为首先他有非常优秀的]]></description>
</item></channel>
</rss>
